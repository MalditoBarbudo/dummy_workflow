on:
  push:
    paths:
      - '**.Rmd'

name: render_workflows_artifacts

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1
      
      - name: Install system dependencies
        run: |
          sudo apt-get install -y make
          sudo apt-get install -y libicu-dev
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y libssl-dev
          sudo apt-get install -y git
          sudo apt-get install -y libgit2-dev
          sudo apt-get install -y libpq-dev

      - name: Cache keys dependencies
        run: |
          install.packages('pkgdepends')
          saveRDS(pkgdepends::new_pkg_deps('rmarkdown')$resolve()$get_resolution(), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install packages
        run: |
          R -e 'install.packages("rmarkdown")'

      - name: Render Rmarkdown files
        run: |
          mkdir rendered_artifact
          RMD_PATH=($(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '[.]Rmd$'))
          Rscript -e 'for (f in commandArgs(TRUE)) if (file.exists(f)) rmarkdown::render(f, "html_fragment", "rendered_artifact/fragment.html")' ${RMD_PATH[*]}
      
      - uses: actions/upload-artifact@v2
        with:
          name: rendered_fragment
          path: rendered_artifact/